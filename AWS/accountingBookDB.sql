CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);


DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200620160824_InitialCreate') THEN
    CREATE TABLE "Companies" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "CompanyName" character varying(255) NOT NULL,
        "ShortName" character varying(50) NOT NULL,
        "CompanyCode" character varying(5) NOT NULL,
        CONSTRAINT "PK_Companies" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200620160824_InitialCreate') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200620160824_InitialCreate', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200620164603_CompanyDataSeed') THEN
    INSERT INTO "Companies" ("Id", "CompanyCode", "CompanyName", "ShortName")
    VALUES (1, 'C001', 'hexquote.com', 'hexquote');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200620164603_CompanyDataSeed') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200620164603_CompanyDataSeed', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200627071408_Account') THEN
    CREATE TABLE "Accounts" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "AccountName" character varying(100) NOT NULL,
        "AccountCode" integer NOT NULL,
        "DrOrCrSide" integer NOT NULL,
        "AccountType" integer NOT NULL,
        "ParentAccountId" bigint NULL,
        CONSTRAINT "PK_Accounts" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Accounts_Accounts_ParentAccountId" FOREIGN KEY ("ParentAccountId") REFERENCES "Accounts" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200627071408_Account') THEN
    CREATE INDEX "IX_Accounts_ParentAccountId" ON "Accounts" ("ParentAccountId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200627071408_Account') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200627071408_Account', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200627074948_ParentAccountSeed') THEN
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (1, 10000, 'Assets', 1, 1, NULL);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (2, 20000, 'Liabilities', 2, 2, NULL);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (3, 30000, 'Equity', 3, 2, NULL);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (4, 40000, 'Revenue', 4, 2, NULL);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (5, 50000, 'Expense', 5, 1, NULL);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200627074948_ParentAccountSeed') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200627074948_ParentAccountSeed', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628052728_AccountCodeUnqIndex') THEN
    CREATE UNIQUE INDEX "IX_Accounts_AccountCode" ON "Accounts" ("AccountCode");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628052728_AccountCodeUnqIndex') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200628052728_AccountCodeUnqIndex', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628053219_ChildAccountsData') THEN
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (6, 10111, 'Regular Checking Account', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (30, 50500, 'Purchase price Variance', 5, 1, 5);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (29, 50400, 'Purchase Discounts', 5, 1, 5);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (28, 50300, 'Cost of Goods Sold', 5, 1, 5);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (27, 50200, 'Purchase A/C', 5, 1, 5);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (26, 50101, 'Salary Expenses', 5, 1, 5);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (25, 40500, 'Shipping and Handling', 4, 2, 4);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (24, 40200, 'Sales Discounts', 4, 2, 4);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (23, 40100, 'Sales A/C', 4, 2, 4);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (22, 30500, 'Accumulated Losses', 3, 2, 3);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (21, 30400, 'Accumulated Profits', 3, 2, 3);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (20, 30300, 'Retained Surplus', 3, 2, 3);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (31, 50600, 'Other Expenses', 5, 1, 5);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (19, 30200, 'Capital Surplus', 3, 2, 3);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (17, 20300, 'Sales Tax', 2, 2, 2);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (16, 20202, 'Wages Payable', 2, 2, 2);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (15, 20120, 'Customer Advances', 2, 2, 2);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (14, 20110, 'Account Payable', 2, 2, 2);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (13, 10810, 'Goods Received Clearing Account', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (12, 10800, 'Inventory', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (11, 10150, 'Employee Advances', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (10, 10140, 'Prepaid Expenses', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (9, 10120, 'Accounts Receivable', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (8, 10113, 'Cash in Hand A/C', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (7, 10112, 'Savings Account', 1, 1, 1);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (18, 30100, 'Member Capital', 3, 2, 3);
    INSERT INTO "Accounts" ("Id", "AccountCode", "AccountName", "AccountType", "DrOrCrSide", "ParentAccountId")
    VALUES (32, 50700, 'Purchase Tax', 5, 1, 5);
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628053219_ChildAccountsData') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200628053219_ChildAccountsData', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628123134_JournalEntities') THEN
    CREATE TABLE "JournalEntryHeaders" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "Date" timestamp without time zone NOT NULL,
        "ReferenceNo" text NULL,
        "Memo" text NULL,
        "Posted" boolean NOT NULL,
        CONSTRAINT "PK_JournalEntryHeaders" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628123134_JournalEntities') THEN
    CREATE TABLE "JournalEntryLines" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "DrCr" integer NOT NULL,
        "Amount" numeric NOT NULL,
        "Memo" text NULL,
        "AccountId" bigint NOT NULL,
        "JournalEntryHeaderId" bigint NOT NULL,
        CONSTRAINT "PK_JournalEntryLines" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_JournalEntryLines_Accounts_AccountId" FOREIGN KEY ("AccountId") REFERENCES "Accounts" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_JournalEntryLines_JournalEntryHeaders_JournalEntryHeaderId" FOREIGN KEY ("JournalEntryHeaderId") REFERENCES "JournalEntryHeaders" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628123134_JournalEntities') THEN
    CREATE INDEX "IX_JournalEntryLines_AccountId" ON "JournalEntryLines" ("AccountId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628123134_JournalEntities') THEN
    CREATE INDEX "IX_JournalEntryLines_JournalEntryHeaderId" ON "JournalEntryLines" ("JournalEntryHeaderId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628123134_JournalEntities') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200628123134_JournalEntities', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628130740_LedgerEntities') THEN
    CREATE TABLE "GeneralLedgerHeaders" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "Date" timestamp without time zone NOT NULL,
        "Description" text NULL,
        CONSTRAINT "PK_GeneralLedgerHeaders" PRIMARY KEY ("Id")
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628130740_LedgerEntities') THEN
    CREATE TABLE "GeneralLedgerLines" (
        "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
        "DrCr" integer NOT NULL,
        "Amount" numeric NOT NULL,
        "AccountId" bigint NOT NULL,
        "GeneralLedgerHeaderId" bigint NOT NULL,
        CONSTRAINT "PK_GeneralLedgerLines" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_GeneralLedgerLines_Accounts_AccountId" FOREIGN KEY ("AccountId") REFERENCES "Accounts" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_GeneralLedgerLines_GeneralLedgerHeaders_GeneralLedgerHeader~" FOREIGN KEY ("GeneralLedgerHeaderId") REFERENCES "GeneralLedgerHeaders" ("Id") ON DELETE CASCADE
    );
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628130740_LedgerEntities') THEN
    CREATE INDEX "IX_GeneralLedgerLines_AccountId" ON "GeneralLedgerLines" ("AccountId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628130740_LedgerEntities') THEN
    CREATE INDEX "IX_GeneralLedgerLines_GeneralLedgerHeaderId" ON "GeneralLedgerLines" ("GeneralLedgerHeaderId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628130740_LedgerEntities') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200628130740_LedgerEntities', '3.1.3');
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628191342_JournalEntryMod') THEN
    ALTER TABLE "JournalEntryHeaders" ADD "GeneralLedgerHeaderId" bigint NULL;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628191342_JournalEntryMod') THEN
    CREATE INDEX "IX_JournalEntryHeaders_GeneralLedgerHeaderId" ON "JournalEntryHeaders" ("GeneralLedgerHeaderId");
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628191342_JournalEntryMod') THEN
    ALTER TABLE "JournalEntryHeaders" ADD CONSTRAINT "FK_JournalEntryHeaders_GeneralLedgerHeaders_GeneralLedgerHeade~" FOREIGN KEY ("GeneralLedgerHeaderId") REFERENCES "GeneralLedgerHeaders" ("Id") ON DELETE RESTRICT;
    END IF;
END $$;

DO $$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20200628191342_JournalEntryMod') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20200628191342_JournalEntryMod', '3.1.3');
    END IF;
END $$;
